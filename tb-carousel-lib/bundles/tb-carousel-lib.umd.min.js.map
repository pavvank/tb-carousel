{"version":3,"sources":["ng://tb-carousel-lib/lib/carousel-lib.service.ts","ng://tb-carousel-lib/lib/carousel-lib.component.ts","ng://tb-carousel-lib/lib/models/cardcss.model.ts","ng://tb-carousel-lib/lib/util/utilities.service.ts","ng://tb-carousel-lib/lib/util/component-gen.service.ts","ng://tb-carousel-lib/lib/util/component-gen-factory.service.ts","ng://tb-carousel-lib/lib/carousel-stacked-card/carousel-stacked-card.component.ts","ng://tb-carousel-lib/lib/carousel-basic/carousel-basic.component.ts","ng://tb-carousel-lib/lib/carousel-three-d/carousel-three-d.component.ts","ng://tb-carousel-lib/lib/carousel-lib.module.ts"],"names":["TbCarouselLibService","Injectable","args","providedIn","TbCarouselLibComponent","prototype","ngOnInit","Component","selector","template","CardCSS","zIndex","left","scale","display","top","this","setZIndex","setDisplay","dispaly","setleft","UtilitiesService","sanitizer","getNumberAndUnit","str","value","unit","cssUnits","i","length","isNaN","Number","split","shiftRight","array","last","index","shiftLeft","first","sanitizeUrl","url","bypassSecurityTrustUrl","sumOfNosInArray","sum","DomSanitizer","ComponentGenServiceConfig","ComponentGenService","componentId","resolver","config","_userDefinedComp","userDefinedComp","createComponent","e","componentRef","modelObject","factory","resolveComponentFactory","instance","_tbModelObject","ComponentFactoryResolver","decorators","type","Optional","ComponentGenFactoryService","createComponentGenServiceObject","TbCarouselStackedCardComponent","compGenFactoryService","utility","changeDetector","elRef","renderer","highestZIndex","cssStylesArray","arrayOfPosFirstHalf","arrayOfPosLastHalf","arrayOfPosFirstHalfVertical","arrayOfPosLastHalfVertical","arrayOfZIndexes","arrayOfZIndexesReverse","arrayOfCardSizeHalf","arrayOfCardSizeHalfReverse","timeInterval","stopScrollOnHover","visibleBlocks","orientation","component","dataType","heightOfBox","widthOfBox","property","values","containerHeight","containerWidth","tbTransition","arrowHeight","arrowColor","arrowColor2","arrowWidth","arrowTopMargin","arrowColorTemp","arrowColorTemp1","showNav","navArrowOpacity","showNavArrow","ngAfterViewInit","commonCard","toArray","styles","tbStyle","Object","keys","j","setStyle","nativeElement","compGenService","widgetTargets","data","detectChanges","error","console","destroyComponent","destroy","_this","autoRotate","setInterval","document","hasFocus","moveNext","centerPosition","marginLeft","Math","floor","centerPositionVertical","marginTop","generatePositions","generatePositionsVertical","generateSizeReverse","generateSize","generateZIndexReverse","generateZIndex","generateCssStyles","arrowBorder","arrowBorder1","push","reverse","getScale","x","y","z","getZIndex","getLeft","margin","getTop","getDisplay","start","end","movePrevious","changeArrowColor","changeArrowColorOut","changeArrowColor1","changeArrowColorOut1","pauseMethod","clearInterval","resumeMethod","ChangeDetectorRef","ElementRef","Renderer2","Input","ViewChildren","read","ViewContainerRef","CarouselBasicComponent","arrayOfPosition","arrayOfVerticalPosition","selectedIndex","tbTransitionInitial","rotateTransform","rotateFn","generateVerticalPositions","rotate","multiplier","CarouselThreeDComponent","cssTransformStyleArr","sceneHeight","sceneWidth","inclinedAngle","cardHeight","cardWidth","cardTop","cardLeft","radius","tan","PI","tbCarouselTransform","generateTransformStyleArr","sqrt","getTransformValue","angle","zTranslate","rotateCarousel","rotationAngle","TbCarouselLibModule","parentModule","Error","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","exports","SkipSelf"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TbCarouselLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tb-carousel-lib',\n  template: `\n    <p>\n      tb-carousel-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class TbCarouselLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { OnInit } from \"@angular/core\";\r\n\r\nexport class CardCSS {\r\n\r\n    public zIndex: number;\r\n    public left: string;\r\n    public scale: string;\r\n    public display: string;\r\n    public top: string;\r\n\r\n    constructor(zIndex: number, left: string, scale: string, display: string, top: string) {\r\n        this.zIndex = zIndex;\r\n        this.left = left;\r\n        this.scale = scale;\r\n        this.display = display;\r\n        this.top = top;\r\n    }\r\n\r\n    public setZIndex(zIndex: number) {\r\n        this.zIndex = zIndex;\r\n    }\r\n\r\n    public setDisplay(dispaly: string) {\r\n        this.display = dispaly;\r\n    }\r\n\r\n    public setleft(left: string) {\r\n        this.left = left;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilitiesService {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  getNumberAndUnit(str: any): { value: number, unit: string } {\n    let value: number = 0;\n    let unit: string = \"\";\n    let cssUnits: string[] = [\"em\", \"ex\", \"%\", \"px\", \"cm\", \"mm\", \"in\", \"pt\", \"pc\",\n      \"ch\", \"rem\", \"vh\", \"vw\", \"vmin\", \"vmax\"];\n\n    for (let i = 0; i < cssUnits.length; i++) {\n      if (!isNaN(Number(str.split(cssUnits[i])[0]))) {\n        value = Number(str.split(cssUnits[i])[0]);\n        unit = cssUnits[i];\n      }\n    }\n    return { value: value, unit: unit };\n  }\n\n  shiftRight(array: any[]) {\n\n    let last = array[array.length - 1];\n\n    for (let index = array.length - 2; index >= 0; index--)\n      array[index + 1] = array[index];\n\n    array[0] = last;\n  }\n\n  shiftLeft(array: any[]) {\n\n    let first = array[0];\n    for (let index = 0; index < array.length; index++) {\n      array[index] = array[index + 1];\n    }\n    array[array.length - 1] = first;\n  }\n\n  sanitizeUrl(url: string) {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  sumOfNosInArray(array: number[]): number {\n    let sum = 0;\n    for (let i = 0; i < array.length; i++) {\n      sum += array[i];\n    }\n    return sum;\n  }\n\n}\n","import {\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Optional\n} from '@angular/core';\nimport { TbCarouselLibComponent } from './../carousel-lib.component';\n\nexport class ComponentGenServiceConfig {\n  userDefinedComp: any;\n}\n\n\nexport class ComponentGenService {\n\n  _userDefinedComp = TbCarouselLibComponent;\n\n  constructor(componentId : number, private resolver: ComponentFactoryResolver, \n    @Optional() config: ComponentGenServiceConfig) {\n    if (config) { this._userDefinedComp = config[componentId].userDefinedComp; }\n  }\n\n  createComponent(e: ViewContainerRef, componentRef: any, modelObject : any) {\n    //this.entry.clear();\n    let factory = this.resolver.resolveComponentFactory(this._userDefinedComp);\n    componentRef = e.createComponent(factory);\n    componentRef.instance._tbModelObject = modelObject;\n  }\n\n}\n\n","import {\n  ComponentFactoryResolver,\n  Optional\n} from '@angular/core';\nimport { ComponentGenService, ComponentGenServiceConfig } from './component-gen.service';\n\nexport class ComponentGenFactoryService {\n\n  constructor(private resolver: ComponentFactoryResolver, @Optional() private config: ComponentGenServiceConfig) { }\n\n  public createComponentGenServiceObject(componentId: number) {\n    return new ComponentGenService(componentId, this.resolver, this.config);\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ViewChildren,\n  QueryList,\n  AfterViewInit,\n  Input,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { CardCSS } from '../models/cardcss.model';\nimport { ComponentGenService } from '../util/component-gen.service';\nimport { UtilitiesService } from '../util/utilities.service';\nimport { ComponentGenFactoryService } from '../util/component-gen-factory.service';\n\n@Component({\n  selector: 'tb-carousel-stacked-card',\n  templateUrl: './carousel-stacked-card.component.html',\n  styleUrls: ['./carousel-stacked-card.component.css']\n})\nexport class TbCarouselStackedCardComponent implements OnInit, AfterViewInit {\n\n  marginLeft: string;\n  marginTop: string;\n\n  highestZIndex: number = 100;\n  centerPosition: number;\n  centerPositionVertical: number;\n\n  cssStylesArray: CardCSS[] = [];\n  arrayOfPosFirstHalf: number[] = [];\n  arrayOfPosLastHalf: number[] = [];\n  arrayOfPosFirstHalfVertical: number[] = [];\n  arrayOfPosLastHalfVertical: number[] = [];\n  arrayOfZIndexes: number[] = [];\n  arrayOfZIndexesReverse: number[] = [];\n  arrayOfCardSizeHalf: number[] = [];\n  arrayOfCardSizeHalfReverse: number[] = [];\n\n  componentRef: any;\n\n  /** */\n  @Input('autoScrollInterval') timeInterval: number = 1000;\n  @Input('stopScrollOnHover') stopScrollOnHover: boolean = true;\n  autoRotate;\n\n  /*Data and visible no. of cards */\n  @Input('displayData') data: any[];\n  @Input('visibleCards') visibleBlocks: number = 5;\n  @Input('orientation') orientation: string = \"horizontal\";\n  @Input('component') component: number = 0;\n  @Input('dataType') dataType: string = 'text';\n\n  /*Card Style properties*/\n  @Input('cardHeight') heightOfBox: string = \"250px\";\n  @Input('cardWidth') widthOfBox: string = \"300px\";\n  @Input('tbCardStyle') tbStyle: { [key: string]: string; };\n  property: string[] = [];\n  values: string[] = [];\n\n  /*Container properties */\n  @Input('containerHeight') containerHeight = \"0px\";\n  @Input('containerWidth') containerWidth = \"0px\";\n  @Input('tbTransition') tbTransition = \"left 1s, transform 1s, top 1s\";\n\n  /*Image properties */\n  @Input('tbImageStyle') tbImageStyle;\n\n  /**Navigation arrow properties */\n  @Input('arrowHeight') arrowHeight = \"45px\";\n  @Input('arrowColor') arrowColor = \"black\";\n  @Input('arrowColorChange') arrowColor2 = \"rgb(100, 99, 100)\";\n  arrowWidth = \"30px\";\n  arrowTopMargin = \"-22px\";\n  arrowColorTemp = this.arrowColor;\n  arrowBorder;\n  arrowColorTemp1 = this.arrowColor;\n  arrowBorder1;\n  showNav: string = \"block\";\n  @Input('navArrowOpacity') navArrowOpacity = 0.5;\n  @Input('showNavArrow') showNavArrow: boolean = true;\n\n  /**Methods*/\n\n  @ViewChildren('customComponent', { read: ViewContainerRef }) public widgetTargets: QueryList<ViewContainerRef>;\n  @ViewChildren('commonCard', { read: ElementRef }) commonCard: QueryList<ElementRef>;\n  constructor(private resolver: ComponentFactoryResolver,\n    private compGenFactoryService: ComponentGenFactoryService, public utility: UtilitiesService,\n    private changeDetector: ChangeDetectorRef,\n    private elRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n\n    for (let i = 0; i < this.commonCard.toArray().length; i++) {\n      let styles;\n\n      if (i == 0 && this.tbStyle) {\n        styles = this.tbStyle;\n        this.property = Object.keys(styles);\n        this.values = Object.values(styles);\n      }\n      if (this.property.length == this.values.length) {\n        for (let j = 0; j < this.property.length; j++) {\n          this.renderer.setStyle(this.commonCard.toArray()[i].nativeElement, this.property[j], this.values[j]);\n        }\n      }\n    }\n\n\n    if (this.dataType == \"custom-component\") {\n      try {\n        let compGenService: ComponentGenService = this.compGenFactoryService.\n          createComponentGenServiceObject(this.component);\n        for (let i = 0; i < this.widgetTargets.toArray().length; i++) {\n          compGenService.createComponent(this.widgetTargets.toArray()[i], this.componentRef, this.data[i]);\n        }\n        this.changeDetector.detectChanges();\n      } catch (error) {\n        console.error(\"No componenet is defined in TbCarouselLibModule.forRoot([]) please add the component needed and pass on the index of component as property bind e.g. component='1'.\");\n      }\n\n    }\n\n  }\n\n  destroyComponent() {\n    this.componentRef.destroy();\n  }\n\n  ngOnInit(): void {\n\n    this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n\n    if (this.showNavArrow) {\n      this.showNav = \"block\";\n    } else {\n      this.showNav = \"none\";\n    }\n\n    this.visibleBlocks = this.data.length < this.visibleBlocks ? this.data.length : this.visibleBlocks;\n\n    if (this.orientation == \"horizontal\") {\n      this.centerPosition = 50;\n      this.marginLeft = \"-\" + Math.floor(this.utility.getNumberAndUnit(this.widthOfBox).value / 2) +\n        this.utility.getNumberAndUnit(this.widthOfBox).unit;\n    } else {\n      this.centerPosition = 0;\n      this.marginLeft = (this.utility.getNumberAndUnit(this.widthOfBox).value * 0.1) +\n        this.utility.getNumberAndUnit(this.widthOfBox).unit;\n    }\n\n    if (this.orientation == \"vertical\") {\n      this.centerPositionVertical = 50;\n      this.marginTop = \"-\" + Math.floor(this.utility.getNumberAndUnit(this.heightOfBox).value / 2) +\n        this.utility.getNumberAndUnit(this.heightOfBox).unit;\n    } else {\n      this.centerPositionVertical = 0;\n      this.marginTop = (this.utility.getNumberAndUnit(this.heightOfBox).value * 0.1) +\n        this.utility.getNumberAndUnit(this.heightOfBox).unit;\n    }\n\n    this.generatePositions();\n\n    this.generatePositionsVertical();\n\n    this.generateSizeReverse();\n    this.generateSize();\n\n    this.generateZIndexReverse();\n    this.generateZIndex();\n\n    this.generateCssStyles();\n\n    if (this.utility.getNumberAndUnit(this.containerHeight).value == 0) {\n      this.containerHeight =\n        this.orientation == \"vertical\" ?\n          (this.utility.getNumberAndUnit(this.heightOfBox).value *\n            (1 + this.utility.sumOfNosInArray(this.arrayOfCardSizeHalf)) +\n            this.utility.getNumberAndUnit(this.heightOfBox).unit) :\n          this.utility.getNumberAndUnit(this.heightOfBox).value * (1.2) +\n          this.utility.getNumberAndUnit(this.heightOfBox).unit;\n    }\n\n\n    if (this.utility.getNumberAndUnit(this.containerWidth).value == 0) {\n      this.containerWidth =\n        this.orientation == \"horizontal\" ?\n          (this.utility.getNumberAndUnit(this.widthOfBox).value *\n            (1 + this.utility.sumOfNosInArray(this.arrayOfCardSizeHalf)) +\n            this.utility.getNumberAndUnit(this.widthOfBox).unit) :\n          this.utility.getNumberAndUnit(this.widthOfBox).value * (1.2) +\n          this.utility.getNumberAndUnit(this.widthOfBox).unit;\n    }\n\n    this.arrowWidth = (this.utility.getNumberAndUnit(this.arrowHeight).value / 1.5) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowTopMargin = \"-\" + (this.utility.getNumberAndUnit(this.arrowHeight).value / 2) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n\n  }\n\n  generatePositions() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      if (this.orientation == \"horizontal\") {\n        this.arrayOfPosFirstHalf.push((this.centerPosition + (i * 10)));\n        this.arrayOfPosLastHalf.push((this.centerPosition - (i * 10)));\n      } else {\n        this.arrayOfPosFirstHalf.push(0);\n        this.arrayOfPosLastHalf.push(0);\n      }\n    }\n    this.arrayOfPosLastHalf.reverse();\n  }\n\n  generatePositionsVertical() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      if (this.orientation == \"vertical\") {\n        this.arrayOfPosFirstHalfVertical.push((this.centerPositionVertical + (i * 15)));\n        this.arrayOfPosLastHalfVertical.push((this.centerPositionVertical - (i * 15)));\n      } else {\n        this.arrayOfPosFirstHalfVertical.push(0);\n        this.arrayOfPosLastHalfVertical.push(0);\n      }\n    }\n    this.arrayOfPosLastHalfVertical.reverse();\n  }\n\n  generateSize() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      this.arrayOfCardSizeHalf.push((1 - (0.1 * i)));\n    }\n  }\n\n  generateSizeReverse() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      this.arrayOfCardSizeHalfReverse.push((1 - (0.1 * i)));\n    }\n    this.arrayOfCardSizeHalfReverse.reverse();\n  }\n\n  generateZIndex() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      this.arrayOfZIndexes.push((this.highestZIndex - (i)));\n    }\n  }\n\n  generateZIndexReverse() {\n    for (let i = 1; i <= Math.floor(this.visibleBlocks / 2); i++) {\n      this.arrayOfZIndexesReverse.push((this.highestZIndex - (i)));\n    }\n    this.arrayOfZIndexesReverse.reverse();\n  }\n\n  getScale(x: number, y: number, z: number): string {\n    return \"scale3d(\" + x + \", \" + y + \", \" + z + \")\";\n  }\n\n  getZIndex(index: number): number {\n    return index;\n  }\n\n  getLeft(margin: number): string {\n    return margin + \"%\";\n  }\n\n  getTop(margin: number): string {\n    return margin + \"%\";\n  }\n\n  getDisplay(display: string): string {\n    return display;\n  }\n\n  generateCssStyles() {\n    let start: number = Math.floor(this.visibleBlocks / 2);\n    let end: number = this.data.length - Math.floor(this.visibleBlocks / 2);\n\n    for (let i = 0; i < this.data.length; i++) {\n      if (i == 0) {\n        this.cssStylesArray.push(new CardCSS(this.getZIndex(this.highestZIndex),\n          this.getLeft(this.centerPosition), this.getScale(1, 1, 1), this.getDisplay(\"block\"),\n          this.getTop(this.centerPositionVertical)));\n      }\n      else if (i != 0 && i <= start) {\n        this.cssStylesArray.push(new CardCSS(this.getZIndex(this.arrayOfZIndexes[i - 1]),\n          this.getLeft(this.arrayOfPosFirstHalf[i - 1]),\n          this.getScale(this.arrayOfCardSizeHalf[i - 1], this.arrayOfCardSizeHalf[i - 1], this.arrayOfCardSizeHalf[i - 1]),\n          this.getDisplay(\"block\"), this.getTop(this.arrayOfPosFirstHalfVertical[i - 1])));\n      }\n      else if (i != 0 && i >= end) {\n        this.cssStylesArray.push(new CardCSS(this.getZIndex(this.arrayOfZIndexesReverse[i - end]),\n          this.getLeft(this.arrayOfPosLastHalf[i - end]),\n          this.getScale(this.arrayOfCardSizeHalfReverse[i - end], this.arrayOfCardSizeHalfReverse[i - end],\n            this.arrayOfCardSizeHalfReverse[i - end]),\n          this.getDisplay(\"block\"), this.getTop(this.arrayOfPosLastHalfVertical[i - end])));\n      }\n      else if (i != 0 && i > start && i < end) {\n        this.cssStylesArray.push(new CardCSS(this.getZIndex(0),\n          this.getLeft(this.centerPosition), this.getScale(0, 0, 0), this.getDisplay(\"none\"),\n          this.getTop(this.centerPositionVertical)));\n      }\n    }\n  }\n\n  moveNext() {\n    this.utility.shiftRight(this.cssStylesArray);\n  }\n\n  movePrevious() {\n    this.utility.shiftLeft(this.cssStylesArray);\n  }\n\n  changeArrowColor() {\n    this.arrowColorTemp = this.arrowColor2;\n    this.arrowBorder = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut() {\n    this.arrowColorTemp = this.arrowColor;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n  }\n\n  changeArrowColor1() {\n    this.arrowColorTemp1 = this.arrowColor2;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut1() {\n    this.arrowColorTemp1 = this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n  }\n\n  pauseMethod() {\n    if (this.stopScrollOnHover) {\n      clearInterval(this.autoRotate);\n    }\n  }\n\n  resumeMethod() {\n    if (this.stopScrollOnHover) {\n      this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n    }\n  }\n\n}","import {\n  Component,\n  OnInit,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ViewChildren,\n  QueryList,\n  Input,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { CardCSS } from '../models/cardcss.model';\nimport { ComponentGenService } from '../util/component-gen.service';\nimport { UtilitiesService } from '../util/utilities.service';\nimport { ComponentGenFactoryService } from '../util/component-gen-factory.service';\n\n@Component({\n  selector: 'tb-carousel-basic',\n  templateUrl: './carousel-basic.component.html',\n  styleUrls: ['./carousel-basic.component.css']\n})\nexport class CarouselBasicComponent implements OnInit {\n\n  cssStylesArray: CardCSS[] = [];\n  arrayOfPosition: number[] = [];\n  arrayOfVerticalPosition: number[] = [];\n  autoRotate;\n  rotateTransform;\n  rotateFn;\n  selectedIndex = 0;\n\n  componentRef: any;\n\n  /** */\n  @Input('autoScrollInterval') timeInterval: number = 1000;\n  @Input('stopScrollOnHover') stopScrollOnHover: boolean = true;\n\n  /*Data and visible no. of cards */\n  @Input('displayData') data: any[];\n  @Input('orientation') orientation: string = \"horizontal\";\n  @Input('component') component: number = 0;\n  @Input('dataType') dataType: string = 'text';\n\n  /*Card Style properties*/\n  @Input('cardHeight') heightOfBox: string = \"250px\";\n  @Input('cardWidth') widthOfBox: string = \"300px\";\n  @Input('tbCardStyle') tbStyle: { [key: string]: string; };\n  property: string[] = [];\n  values: string[] = [];\n\n  /*Image properties */\n  @Input('tbImageStyle') tbImageStyle;\n\n  /*Container properties */\n  @Input('containerHeight') containerHeight;\n  @Input('containerWidth') containerWidth;\n  @Input('tbTransition') tbTransition = \"transform 1s\";\n  tbTransitionInitial;\n\n  /**Navigation arrow properties */\n  @Input('arrowHeight') arrowHeight = \"45px\";\n  @Input('arrowColor') arrowColor = \"black\";\n  @Input('arrowColorChange') arrowColor2 = \"rgb(100, 99, 100)\";\n  arrowWidth = \"30px\";\n  arrowTopMargin = \"-22px\";\n  arrowColorTemp = this.arrowColor;\n  arrowBorder;\n  arrowColorTemp1 = this.arrowColor;\n  arrowBorder1;\n  showNav: string = \"block\";\n  @Input('navArrowOpacity') navArrowOpacity = 0.5;\n  @Input('showNavArrow') showNavArrow: boolean = true;\n\n  /**Methods*/\n\n  @ViewChildren('customComponent', { read: ViewContainerRef }) public widgetTargets: QueryList<ViewContainerRef>;\n  @ViewChildren('commonCard', { read: ElementRef }) commonCard: QueryList<ElementRef>;\n\n  constructor(private resolver: ComponentFactoryResolver,\n    private compGenFactoryService: ComponentGenFactoryService, public utility: UtilitiesService,\n    private changeDetector: ChangeDetectorRef, private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n\n    for (let i = 0; i < this.commonCard.toArray().length; i++) {\n      let styles;\n\n      if (i == 0 && this.tbStyle) {\n        styles = this.tbStyle;\n        this.property = Object.keys(styles);\n        this.values = Object.values(styles);\n      }\n      if (this.property.length == this.values.length) {\n        for (let j = 0; j < this.property.length; j++) {\n          this.renderer.setStyle(this.commonCard.toArray()[i].nativeElement, this.property[j], this.values[j]);\n        }\n      }\n    }\n\n    if (this.dataType == \"custom-component\") {\n      try {\n        let compGenService: ComponentGenService = this.compGenFactoryService.\n          createComponentGenServiceObject(this.component);\n        for (let i = 0; i < this.widgetTargets.toArray().length; i++) {\n          compGenService.createComponent(this.widgetTargets.toArray()[i], this.componentRef, this.data[i]);\n        }\n        this.changeDetector.detectChanges();\n      } catch (error) {\n        console.error(\"No componenet is defined in TbCarouselLibModule.forRoot([]) please add the component needed and pass on the index of component as property bind e.g. component='1'.\");\n      }\n\n    }\n\n  }\n\n  destroyComponent() {\n    this.componentRef.destroy();\n  }\n\n  ngOnInit(): void {\n\n    this.tbTransitionInitial = this.tbTransition;\n\n    this.rotateTransform = this.orientation == \"horizontal\" ? \"translateX(0px)\" : \"translateY(0px)\";\n\n    this.rotateFn = this.orientation == \"horizontal\" ? \"translateX\" : \"translateY\";\n\n    this.containerHeight = this.heightOfBox;\n    this.containerWidth = this.widthOfBox;\n\n    this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n\n    if (this.showNavArrow) {\n      this.showNav = \"block\";\n    } else {\n      this.showNav = \"none\";\n    }\n\n    this.generatePositions();\n    this.generateVerticalPositions();\n    this.generateCssStyles();\n\n    this.arrowWidth = (this.utility.getNumberAndUnit(this.arrowHeight).value / 1.5) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowTopMargin = \"-\" + (this.utility.getNumberAndUnit(this.arrowHeight).value / 2) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n\n  }\n\n  generatePositions() {\n    if (this.orientation == \"horizontal\") {\n      if (this.data) {\n        if (this.data.length > 0) {\n          for (let i = 0; i < this.data.length; i++) {\n            this.arrayOfPosition.push(\n              this.utility.getNumberAndUnit(this.widthOfBox).value * i\n            )\n          }\n        }\n      }\n    } else if (this.orientation == \"vertical\") {\n      if (this.data) {\n        if (this.data.length > 0) {\n          for (let i = 0; i < this.data.length; i++) {\n            this.arrayOfPosition.push(0)\n          }\n        }\n      }\n    }\n\n  }\n\n  generateVerticalPositions() {\n    if (this.orientation == \"vertical\") {\n      if (this.data) {\n        if (this.data.length > 0) {\n          for (let i = 0; i < this.data.length; i++) {\n            this.arrayOfVerticalPosition.push(\n              this.utility.getNumberAndUnit(this.heightOfBox).value * i\n            )\n          }\n        }\n      }\n    } else if (this.orientation == \"horizontal\") {\n      if (this.data) {\n        if (this.data.length > 0) {\n          for (let i = 0; i < this.data.length; i++) {\n            this.arrayOfVerticalPosition.push(0)\n          }\n        }\n      }\n    }\n  }\n\n  getLeft(margin: number): string {\n    return margin + this.utility.getNumberAndUnit(this.widthOfBox).unit;\n  }\n\n  getTop(margin: number): string {\n    return margin + this.utility.getNumberAndUnit(this.heightOfBox).unit;\n  }\n\n  generateCssStyles() {\n    for (let i = 0; i < this.data.length; i++) {\n      this.cssStylesArray.push(new CardCSS(100,\n        this.getLeft(this.arrayOfPosition[i]),\n        \"scale3d(1,1,1)\", \"block\",\n        this.getTop(this.arrayOfVerticalPosition[i])));\n    }\n  }\n\n  rotate() {\n    let multiplier = this.orientation == \"horizontal\" ?\n      this.utility.getNumberAndUnit(this.widthOfBox).value : this.utility.getNumberAndUnit(this.heightOfBox).value;\n    let unit = this.orientation == \"horizontal\" ?\n      this.utility.getNumberAndUnit(this.widthOfBox).unit : this.utility.getNumberAndUnit(this.heightOfBox).unit;\n\n    this.rotateTransform = this.rotateFn + \"(\" + this.selectedIndex * -1 *\n      multiplier + unit + \")\";\n  }\n\n\n  moveNext() {\n    this.selectedIndex++;\n    if (this.selectedIndex > this.data.length - 1) {\n      this.selectedIndex = 0;\n      this.tbTransition = \"none\";\n    } else {\n      this.tbTransition = this.tbTransitionInitial;\n    }\n    this.rotate();\n  }\n\n  movePrevious() {\n    this.selectedIndex--;\n    if (this.selectedIndex < 0) {\n      this.selectedIndex = this.data.length - 1;\n      this.tbTransition = \"none\";\n    } else {\n      this.tbTransition = this.tbTransitionInitial;\n    }\n    this.rotate();\n  }\n\n  changeArrowColor() {\n    this.arrowColorTemp = this.arrowColor2;\n    this.arrowBorder = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut() {\n    this.arrowColorTemp = this.arrowColor;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n  }\n\n  changeArrowColor1() {\n    this.arrowColorTemp1 = this.arrowColor2;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut1() {\n    this.arrowColorTemp1 = this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n  }\n\n  pauseMethod() {\n    if (this.stopScrollOnHover) {\n      clearInterval(this.autoRotate);\n    }\n  }\n\n  resumeMethod() {\n    if (this.stopScrollOnHover) {\n      this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n    }\n  }\n\n}","import {\n  Component,\n  OnInit,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ViewChildren,\n  QueryList,\n  Input,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { ComponentGenService } from '../util/component-gen.service';\nimport { UtilitiesService } from '../util/utilities.service';\nimport { ComponentGenFactoryService } from '../util/component-gen-factory.service';\n\n@Component({\n  selector: 'tb-carousel-three-d',\n  templateUrl: './carousel-three-d.component.html',\n  styleUrls: ['./carousel-three-d.component.css']\n})\nexport class CarouselThreeDComponent implements OnInit {\n\n  selectedIndex = 0;\n\n  cssTransformStyleArr: any[] = [];\n  autoRotate;\n  radius;\n  sceneHeight = \"300px\";\n  sceneWidth = \"300px\";\n  tbCarouselTransform;\n  cardHeight;\n  cardWidth;\n  cardTop;\n  cardLeft;\n  rotateFn;\n  inclinedAngle;\n  componentRef: any;\n\n  /** */\n  @Input('autoScrollInterval') timeInterval: number = 1000;\n  @Input('stopScrollOnHover') stopScrollOnHover: boolean = true;\n\n  /*Data and visible no. of cards */\n  @Input('displayData') data: any[];\n  @Input('orientation') orientation: string = \"horizontal\";\n  @Input('component') component: number = 0;\n  @Input('dataType') dataType: string = 'text';\n\n  /*Card Style properties*/\n  @Input('cardHeight') heightOfBox: string = \"250px\";\n  @Input('cardWidth') widthOfBox: string = \"300px\";\n  @Input('tbCardStyle') tbStyle: { [key: string]: string; };\n  property: string[] = [];\n  values: string[] = [];\n\n  /*Image properties */\n  @Input('tbImageStyle') tbImageStyle;\n\n  /*Container properties */\n  @Input('containerHeight') containerHeight;\n  @Input('containerWidth') containerWidth;\n  @Input('tbTransition') tbTransition = \"transform 1s\";\n\n  /**Navigation arrow properties */\n  @Input('arrowHeight') arrowHeight = \"45px\";\n  @Input('arrowColor') arrowColor = \"black\";\n  @Input('arrowColorChange') arrowColor2 = \"rgb(100, 99, 100)\";\n  arrowWidth = \"30px\";\n  arrowTopMargin = \"-22px\";\n  arrowColorTemp = this.arrowColor;\n  arrowBorder;\n  arrowColorTemp1 = this.arrowColor;\n  arrowBorder1;\n  showNav: string = \"block\";\n  @Input('navArrowOpacity') navArrowOpacity = 0.5;\n  @Input('showNavArrow') showNavArrow: boolean = true;\n\n  /**Methods*/\n\n  @ViewChildren('customComponent', { read: ViewContainerRef }) public widgetTargets: QueryList<ViewContainerRef>;\n  @ViewChildren('commonCard', { read: ElementRef }) commonCard: QueryList<ElementRef>;\n\n  constructor(private resolver: ComponentFactoryResolver,\n    private compGenFactoryService: ComponentGenFactoryService, public utility: UtilitiesService,\n    private changeDetector: ChangeDetectorRef, private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n\n    for (let i = 0; i < this.commonCard.toArray().length; i++) {\n      let styles;\n\n      if (i == 0 && this.tbStyle) {\n        styles = this.tbStyle;\n        this.property = Object.keys(styles);\n        this.values = Object.values(styles);\n      }\n      if (this.property.length == this.values.length) {\n        for (let j = 0; j < this.property.length; j++) {\n          this.renderer.setStyle(this.commonCard.toArray()[i].nativeElement, this.property[j], this.values[j]);\n        }\n      }\n    }\n\n    if (this.dataType == \"custom-component\") {\n      try {\n        let compGenService: ComponentGenService = this.compGenFactoryService.\n          createComponentGenServiceObject(this.component);\n        for (let i = 0; i < this.widgetTargets.toArray().length; i++) {\n          compGenService.createComponent(this.widgetTargets.toArray()[i], this.componentRef, this.data[i]);\n        }\n        this.changeDetector.detectChanges();\n      } catch (error) {\n        console.error(\"No componenet is defined in TbCarouselLibModule.forRoot([]) please add the component needed and pass on the index of component as property bind e.g. component='1'.\");\n      }\n\n    }\n\n  }\n\n  destroyComponent() {\n    this.componentRef.destroy();\n  }\n\n  ngOnInit(): void {\n\n    this.rotateFn = this.orientation == \"horizontal\" ? \"rotateY\" : \"rotateX\";\n    this.inclinedAngle = 360 / this.data.length;\n\n    this.sceneHeight = this.heightOfBox;\n    this.sceneWidth = this.widthOfBox;\n\n    this.cardHeight = this.utility.getNumberAndUnit(this.heightOfBox).value * 0.90 + this.utility.getNumberAndUnit(this.heightOfBox).unit;\n    this.cardWidth = this.utility.getNumberAndUnit(this.widthOfBox).value * 0.90 + this.utility.getNumberAndUnit(this.widthOfBox).unit;\n    this.cardTop = this.utility.getNumberAndUnit(this.heightOfBox).value * 0.05 + this.utility.getNumberAndUnit(this.heightOfBox).unit;\n    this.cardLeft = this.utility.getNumberAndUnit(this.widthOfBox).value * 0.05 + this.utility.getNumberAndUnit(this.widthOfBox).unit;\n\n    this.radius = this.orientation == \"horizontal\" ?\n      (this.utility.getNumberAndUnit(this.widthOfBox).value) * 0.5 /\n      Math.tan((0.5 * this.inclinedAngle) * (Math.PI / 180)) :\n      (this.utility.getNumberAndUnit(this.heightOfBox).value) * 0.5 /\n      Math.tan((0.5 * this.inclinedAngle) * (Math.PI / 180));\n\n\n    this.tbCarouselTransform = this.orientation == \"horizontal\" ?\n      \"translateZ(-\" + this.radius + this.utility.getNumberAndUnit(this.widthOfBox).unit + \")\" +\n      this.rotateFn + \"(\" + 0 + \"deg)\" :\n      \"translateZ(-\" + this.radius + this.utility.getNumberAndUnit(this.heightOfBox).unit + \")\" +\n      this.rotateFn + \"(\" + 0 + \"deg)\";\n\n    this.generateTransformStyleArr();\n\n    this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n\n    if (this.showNavArrow) {\n      this.showNav = \"block\";\n    } else {\n      this.showNav = \"none\";\n    }\n\n    this.containerHeight = this.orientation == \"horizontal\" ? this.sceneHeight :\n      2 * Math.sqrt((this.radius * this.radius +\n        (this.utility.getNumberAndUnit(this.heightOfBox).value) * 0.5 *\n        (this.utility.getNumberAndUnit(this.heightOfBox).value) * 0.5))\n      + this.utility.getNumberAndUnit(this.heightOfBox).unit;\n\n    this.containerWidth = this.orientation == \"horizontal\" ?\n      2 * Math.sqrt((this.radius * this.radius +\n        (this.utility.getNumberAndUnit(this.widthOfBox).value) * 0.5 *\n        (this.utility.getNumberAndUnit(this.widthOfBox).value) * 0.5))\n      + this.utility.getNumberAndUnit(this.widthOfBox).unit : this.sceneWidth;\n\n    this.arrowWidth = (this.utility.getNumberAndUnit(this.arrowHeight).value / 1.5) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowTopMargin = \"-\" + (this.utility.getNumberAndUnit(this.arrowHeight).value / 2) +\n      this.utility.getNumberAndUnit(this.arrowHeight).unit;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n\n  }\n\n  getTransformValue(angle: number, zTranslate: number): string {\n    return this.orientation == \"horizontal\" ?\n      \"rotateY(\" + angle + \"deg) translateZ(\" + zTranslate + \"px)\" :\n      \"rotateX(\" + angle + \"deg) translateZ(\" + zTranslate + \"px)\";\n  }\n\n  generateTransformStyleArr() {\n    for (let i = 0; i < this.data.length; i++) {\n      this.cssTransformStyleArr.push(this.getTransformValue(i * this.inclinedAngle, this.radius));\n    }\n  }\n\n  rotateCarousel() {\n    let rotationAngle = this.inclinedAngle * -1 * this.selectedIndex;\n    this.tbCarouselTransform =\n      \"translateZ(-\" + this.radius + this.utility.getNumberAndUnit(this.widthOfBox).unit + \")\" +\n      this.rotateFn + \"(\" + rotationAngle + \"deg)\";\n  }\n\n  moveNext() {\n    this.selectedIndex++;\n    this.rotateCarousel();\n  }\n\n  movePrevious() {\n    this.selectedIndex--;\n    this.rotateCarousel();\n  }\n\n  changeArrowColor() {\n    this.arrowColorTemp = this.arrowColor2;\n    this.arrowBorder = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut() {\n    this.arrowColorTemp = this.arrowColor;\n    this.arrowBorder = \"1px solid \" + this.arrowColor;\n  }\n\n  changeArrowColor1() {\n    this.arrowColorTemp1 = this.arrowColor2;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor2;\n  }\n\n  changeArrowColorOut1() {\n    this.arrowColorTemp1 = this.arrowColor;\n    this.arrowBorder1 = \"1px solid \" + this.arrowColor;\n  }\n\n  pauseMethod() {\n    if (this.stopScrollOnHover) {\n      clearInterval(this.autoRotate);\n    }\n  }\n\n  resumeMethod() {\n    if (this.stopScrollOnHover) {\n      this.autoRotate = setInterval(() => { if (document.hasFocus()) { this.moveNext(); } }, this.timeInterval);\n    }\n\n  }\n\n}","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { TbCarouselLibComponent } from './carousel-lib.component';\nimport { TbCarouselStackedCardComponent } from './carousel-stacked-card/carousel-stacked-card.component';\nimport { CommonModule } from '@angular/common';\nimport { ComponentGenServiceConfig } from './util/component-gen.service';\nimport { UtilitiesService } from './util/utilities.service';\nimport { ComponentGenFactoryService } from './util/component-gen-factory.service';\nimport { CarouselBasicComponent } from './carousel-basic/carousel-basic.component';\nimport { CarouselThreeDComponent } from './carousel-three-d/carousel-three-d.component';\n\n@NgModule({\n  declarations: [\n    TbCarouselLibComponent,\n    TbCarouselStackedCardComponent,\n    CarouselBasicComponent,\n    CarouselThreeDComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TbCarouselStackedCardComponent,\n    CarouselBasicComponent,\n    CarouselThreeDComponent\n  ],\n  providers: [\n    UtilitiesService,\n    ComponentGenFactoryService\n  ]\n})\nexport class TbCarouselLibModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: TbCarouselLibModule) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config: ComponentGenServiceConfig[]): ModuleWithProviders {\n    return {\n      ngModule: TbCarouselLibModule,\n      providers: [\n        { provide: ComponentGenServiceConfig, useValue: config }\n      ]\n    };\n  }\n\n}\n"]}