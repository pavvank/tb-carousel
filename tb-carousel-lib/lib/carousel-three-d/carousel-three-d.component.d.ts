import { OnInit, ViewContainerRef, ComponentFactoryResolver, QueryList, ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';
import { UtilitiesService } from '../util/utilities.service';
import { ComponentGenFactoryService } from '../util/component-gen-factory.service';
export declare class CarouselThreeDComponent implements OnInit {
    private resolver;
    private compGenFactoryService;
    utility: UtilitiesService;
    private changeDetector;
    private renderer;
    selectedIndex: number;
    cssTransformStyleArr: any[];
    autoRotate: any;
    radius: any;
    sceneHeight: string;
    sceneWidth: string;
    tbCarouselTransform: any;
    cardHeight: any;
    cardWidth: any;
    cardTop: any;
    cardLeft: any;
    rotateFn: any;
    inclinedAngle: any;
    componentRef: any;
    /** */
    timeInterval: number;
    stopScrollOnHover: boolean;
    data: any[];
    orientation: string;
    component: number;
    dataType: string;
    heightOfBox: string;
    widthOfBox: string;
    tbStyle: {
        [key: string]: string;
    };
    property: string[];
    values: string[];
    tbImageStyle: any;
    containerHeight: any;
    containerWidth: any;
    tbTransition: string;
    /**Navigation arrow properties */
    arrowHeight: string;
    arrowColor: string;
    arrowColor2: string;
    arrowWidth: string;
    arrowTopMargin: string;
    arrowColorTemp: string;
    arrowBorder: any;
    arrowColorTemp1: string;
    arrowBorder1: any;
    showNav: string;
    navArrowOpacity: number;
    showNavArrow: boolean;
    /**Methods*/
    widgetTargets: QueryList<ViewContainerRef>;
    commonCard: QueryList<ElementRef>;
    constructor(resolver: ComponentFactoryResolver, compGenFactoryService: ComponentGenFactoryService, utility: UtilitiesService, changeDetector: ChangeDetectorRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    destroyComponent(): void;
    ngOnInit(): void;
    getTransformValue(angle: number, zTranslate: number): string;
    generateTransformStyleArr(): void;
    rotateCarousel(): void;
    moveNext(): void;
    movePrevious(): void;
    changeArrowColor(): void;
    changeArrowColorOut(): void;
    changeArrowColor1(): void;
    changeArrowColorOut1(): void;
    pauseMethod(): void;
    resumeMethod(): void;
}
